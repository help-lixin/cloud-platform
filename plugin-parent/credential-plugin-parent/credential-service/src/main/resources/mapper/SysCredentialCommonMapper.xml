<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="help.lixin.starlink.plugin.credential.mapper.SysCredentialCommonMapper">
  <resultMap id="BaseResultMap" type="help.lixin.starlink.plugin.credential.domain.SysCredentialCommon">
    
    <!-- ID -->
      <result column="id" jdbcType="BIGINT" property="id"/>

      <!-- 凭证唯一名称 -->
      <result column="credential_key" jdbcType="VARCHAR" property="credentialKey"/>

      <!-- 凭证别名 -->
      <result column="credential_name" jdbcType="VARCHAR" property="credentialName"/>

      <!-- 凭证类型 -->
      <result column="credential_type" jdbcType="VARCHAR" property="credentialType"/>

      <!-- 描述 -->
      <result column="remark" jdbcType="VARCHAR" property="remark"/>

      <!-- 命名空间 -->
      <result column="name_space" jdbcType="VARCHAR" property="nameSpace"/>

      <!-- 实例编码 -->
      <result column="instance_code" jdbcType="VARCHAR" property="instanceCode"/>

      <!-- 插件编码 -->
      <result column="plugin_code" jdbcType="VARCHAR" property="pluginCode"/>

      <!-- 是否删除（删除为1） -->
      <result column="is_del" jdbcType="TINYINT" property="isDel"/>

      <!-- 状态值 -->
      <result column="status" jdbcType="TINYINT" property="status"/>

      <!-- 创建人 -->
      <result column="create_by" jdbcType="VARCHAR" property="createBy"/>

      <!-- 更新人 -->
      <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>

      <!-- 创建时间 -->
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>

      <!-- 更新时间 -->
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <insert id="insertCommon" useGeneratedKeys="true" keyProperty="id">
    insert into sys_credential_common (id, credential_key, credential_name, credential_type ,
      remark, name_space, instance_code, plugin_code,
      status, create_by, update_by
      <trim suffix="" suffixOverrides=",">
          <if test="createTime">
              create_time,
          </if>

          <if test="updateTime">
              update_time,
          </if>
      </trim>
    )
    values (#{id,jdbcType=BIGINT}, #{credentialKey,jdbcType=VARCHAR},
     #{credentialName,jdbcType=VARCHAR},#{credentialType,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR}, #{nameSpace,jdbcType=VARCHAR}, #{instanceCode,jdbcType=VARCHAR},
      #{pluginCode,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}
      <trim suffix="" suffixOverrides=",">
          <if test="createTime">
              #{createTime,jdbcType=TIMESTAMP},
          </if>

          <if test="updateTime">
              #{updateTime,jdbcType=TIMESTAMP},
          </if>
      </trim>

  )
  </insert>

    <!-- Generate time: 2023-12-14 19:29:58 ### -->


    <!-- Your codes goes here!!! -->
    <select id="list" resultType="help.lixin.starlink.plugin.credential.domain.SysCredentialCommon">
        SELECT
            *
        FROM
            sys_credential_common
        WHERE
            is_del = 0
        <if test="instanceCode != null and instanceCode != ''">
          AND
            instance_code = #{instanceCode}
        </if>
        <if test="status != null ">
          AND
            status = #{status}
        </if>
        <if test="credentialKey != null and credentialKey != ''">
          AND
            credential_key LIKE CONCAT("%", #{credentialKey},"%")
        </if>
        <if test="credentialName != null and credentialName != ''">
          AND
            credential_name LIKE CONCAT("%", #{credentialName},"%")
        </if>
        <if test="credentialType != null and credentialType != ''">
          AND
            credential_type = #{credentialType}
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
            AND
          date_format(create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
            AND
          date_format(create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
          ORDER BY
          create_time DESC
    </select>
    <select id="queryListById" resultType="java.util.Map">
            SELECT DISTINCT c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
            token.user_name value_1 ,token.token value_2,null value_3 ,null value_4
            FROM
                sys_credential_common c,sys_credential_token token
            WHERE
                c.is_del = 0
            AND
                c.id = #{id}
            AND
                token.id = #{id}
            AND
                c.credential_type = "TOKEN"
        UNION
            SELECT DISTINCT c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
            text.secret value_1,text.`password` value_2, null value_3, null value_4
            FROM
                sys_credential_common c,sys_credential_text text
            WHERE
                c.is_del = 0
            AND
                c.id = #{id}
            AND
                text.id = #{id}
            AND
                c.credential_type = "SECRET"
        UNION
            SELECT DISTINCT c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
            up.user_name value_1 ,up.`password` value_2 , img_domain value_3 ,null value_4
            FROM
                sys_credential_common c,sys_credential_username_password up
            WHERE
                c.is_del = 0
            AND
                c.id = #{id}
            AND
                up.id = #{id}
            AND
                c.credential_type = "USERNAME_PASSWORD"
        UNION
            SELECT DISTINCT c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
            ssh.user_name value_1 ,ssh.passphrase value_2 ,ssh.private_key value_3, ssh.public_key value_4
            FROM
                sys_credential_common c,sys_credential_ssh ssh
            WHERE
                c.is_del = 0
            AND
                c.id = #{id}
            AND
                ssh.id = #{id}
            AND
                c.credential_type = "SSH"
        UNION
            SELECT DISTINCT c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
            tls.private_key value_1 ,tls.certificate value_2 ,null value_3, null value_4
            FROM
                sys_credential_common c,sys_credential_tls tls
            WHERE
                c.is_del = 0
            AND
                c.id = #{id}
            AND
                tls.id = #{id}
            AND
                c.credential_type = "TLS"
        UNION
            SELECT DISTINCT c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
            null value_1 ,null value_2 ,null value_3, null value_4
            FROM
                sys_credential_common c,sys_credential_opaque opaque
            WHERE
                c.is_del = 0
            AND
                c.id = #{id}
            AND
                c.credential_type = "OPAQUE"
    </select>
    <select id="queryOptionList" resultType="java.util.Map">
        <if test="filterType == null">
                SELECT DISTINCT
                    c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                    up.user_name value_1 ,up.`password` value_2 , up.img_domain value_3 ,null value_4
                FROM
                    sys_credential_common c,sys_credential_username_password up
                WHERE
                    c.is_del = 0
                AND
                    c.status = 1
                AND
                    name_space = #{nameSpace}
                AND
                    instance_code = #{instanceCode}
                AND
                    up.id = c.id
                AND
                    c.credential_type = "USERNAME_PASSWORD"
            UNION
                SELECT DISTINCT
                    c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                    ssh.user_name value_1 ,ssh.passphrase value_2 ,ssh.private_key value_3, ssh.public_key value_4
                FROM
                    sys_credential_common c,sys_credential_ssh ssh
                WHERE
                    c.is_del = 0
                AND
                    c.status = 1
                AND
                    name_space = #{nameSpace}
                AND
                    instance_code = #{instanceCode}
                AND
                    ssh.id = c.id
                AND
                    c.credential_type = "SSH"
            UNION
                SELECT DISTINCT
                    c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                    tls.private_key value_1 ,tls.certificate value_2 ,null value_3, null value_4
                FROM
                    sys_credential_common c,sys_credential_tls tls
                WHERE
                    c.is_del = 0
                AND
                    c.status = 1
                AND
                    name_space = #{nameSpace}
                AND
                    instance_code = #{instanceCode}
                AND
                    tls.id = c.id
                AND
                    c.credential_type = "TLS"
            UNION
                SELECT DISTINCT
                    c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                    null value_1 ,null value_2 ,null value_3, null value_4
                FROM
                    sys_credential_common c,sys_credential_opaque opaque
                WHERE
                    c.is_del = 0
                AND
                    c.status = 1
                AND
                    name_space = #{nameSpace}
                AND
                    instance_code = #{instanceCode}
                AND
                    opaque.id = c.id
                AND
                    c.credential_type = "OPAQUE"
        </if>
        <if test="filterType == 'USERNAME_PASSWORD'">
            SELECT DISTINCT
                c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                up.user_name value_1 ,up.`password` value_2 , up.img_domain value_3 ,null value_4
            FROM
                sys_credential_common c,sys_credential_username_password up
            WHERE
                c.is_del = 0
            AND
                c.status = 1
            AND
                name_space = #{nameSpace}
            AND
                instance_code = #{instanceCode}
            AND
                up.id = c.id
            AND
                c.credential_type = "USERNAME_PASSWORD"
        </if>
        <if test="filterType == 'SSH'">
            SELECT DISTINCT
                c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                ssh.user_name value_1 ,ssh.passphrase value_2 ,ssh.private_key value_3, ssh.public_key value_4
            FROM
                sys_credential_common c,sys_credential_ssh ssh
            WHERE
                c.is_del = 0
            AND
                c.status = 1
            AND
                name_space = #{nameSpace}
            AND
                instance_code = #{instanceCode}
            AND
                ssh.id = c.id
            AND
                c.credential_type = "SSH"
        </if>
        <if test="filterType == 'TLS'">
            SELECT DISTINCT
                c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                tls.private_key value_1 ,tls.certificate value_2 ,null value_3, null value_4
            FROM
                sys_credential_common c,sys_credential_tls tls
            WHERE
                c.is_del = 0
            AND
                c.status = 1
            AND
                name_space = #{nameSpace}
            AND
                instance_code = #{instanceCode}
            AND
                tls.id = c.id
            AND
                c.credential_type = "TLS"
        </if>
        <if test="filterType == 'OPAQUE'">
            SELECT DISTINCT
                c.id,c.credential_key,c.credential_name,c.credential_type,c.remark,c.name_space,c.instance_code,c.plugin_code,c.`status`,c.create_by,c.update_by,c.create_time,c.update_time,
                null value_1 ,null value_2 ,null value_3, null value_4
            FROM
                sys_credential_common c,sys_credential_opaque opaque
            WHERE
                c.is_del = 0
            AND
                c.status = 1
            AND
                name_space = #{nameSpace}
            AND
                instance_code = #{instanceCode}
            AND
                opaque.id = c.id
            AND
                c.credential_type = "OPAQUE"
        </if>
    </select>
    <select id="queryListByInstanceCode" resultType="help.lixin.starlink.plugin.credential.domain.SysCredentialCommon">
        SELECT
            *
        FROM
            sys_credential_common
        WHERE
            is_del = 0
        AND
            instance_code = #{instanceCode}
        AND
            status = 1
    </select>
    <select id="selectAll" resultType="help.lixin.starlink.plugin.credential.domain.SysCredentialCommon">
        SELECT
            *
        FROM
            sys_credential_common
        WHERE
            status = 1
        AND
            is_del = 0
    </select>
    <update id="removeById">
        UPDATE
            sys_credential_common
        SET
            is_del = 1
        WHERE
            id = #{id}
    </update>

</mapper>