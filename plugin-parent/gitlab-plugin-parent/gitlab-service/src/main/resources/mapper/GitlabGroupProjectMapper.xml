<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="help.lixin.starlink.plugin.gitlab.mapper.GitlabGroupProjectMapper">
    <resultMap id="BaseResultMap" type="help.lixin.starlink.plugin.gitlab.domain.GitlabGroupProject">

        <!-- ID -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="group_id" jdbcType="BIGINT" property="groupId"/>
        <result column="project_id" jdbcType="BIGINT" property="projectId"/>

        <!-- 是否删除（删除为1） -->
        <result column="is_del" jdbcType="INTEGER" property="isDel"/>

        <!-- 状态值 -->
        <result column="status" jdbcType="INTEGER" property="status"/>

        <!-- 创建人 -->
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>

        <!-- 更新人 -->
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>

        <!-- 创建时间 -->
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>

        <!-- 更新时间 -->
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, group_id, project_id, status, create_by, update_by, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gitlab_group_project
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gitlab_group_project
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert">
    insert into gitlab_group_project (id, group_id, project_id, 
      status, create_by, update_by, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective">
        insert into gitlab_group_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=BIGINT},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective">
        update gitlab_group_project
        <set>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=BIGINT},
            </if>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey">
    update gitlab_group_project
    set group_id = #{groupId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!-- Generate time: 2023-05-18 13:55:26 ### -->


    <!-- Your codes goes here!!! -->
    <select id="queryProjectByProjectId" resultMap="BaseResultMap">
        SELECT
            *
        FROM
            gitlab_group_project
        WHERE
            project_id = #{projectId}
        AND
            is_del = 0
    </select>

</mapper>